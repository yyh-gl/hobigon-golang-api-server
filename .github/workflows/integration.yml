name: Integration

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - 'v[1-9]+.[0-9]+.[0-9]+'

env:
  GO_VERSION: 1.23

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Test
        env:
          APP_ENV: test
        run: go test -v ./...

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
      - name: Lint
        uses: golangci/golangci-lint-action@v6
        with:
          args: --timeout 5m0s

  success_notification:
    name: Success notification
    needs: [ test, lint ]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: technote-space/workflow-conclusion-action@v2
      - uses: rtCamp/action-slack-notify@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_50 }}
          SLACK_TITLE: CI Success
        if: env.WORKFLOW_CONCLUSION == 'success'

  failure_notification:
    name: Failure notification
    needs: [ test, lint ]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: technote-space/workflow-conclusion-action@v2
      - uses: rtCamp/action-slack-notify@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_50 }}
          SLACK_TITLE: CI Failure
          SLACK_COLOR: danger
        if: env.WORKFLOW_CONCLUSION == 'failure'
